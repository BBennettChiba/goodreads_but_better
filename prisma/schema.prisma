// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique @db.VarChar(255)
  email     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  toRead    Book[]   @relation("toReadByWhom", references: [id])
  read      Book[]   @relation("readByWhom", references: [id])
  reviews   Review[] @relation("whichUser")
  reviewId  String?

  @@map(name: "user")
}

model Book {
  id          String   @id @default(cuid())
  title       String
  subtitle    String?
  ISBN        Int      @unique
  publisher   String
  published   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String
  readBy      User[]   @relation("readByWhom")
  toReadBy    User[]   @relation("toReadByWhom")
  reviews     Review[] @relation("whichBook")
  author      Author[]
  firstAuthor String
  thumbnail   String

  @@unique([title, firstAuthor], name: "titleAndAuthor")
  @@map(name: "book")
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  book      Book     @relation("whichBook", fields: [bookId], references: [id])
  bookId    String
  user      User     @relation("whichUser", fields: [userId], references: [id])
  userId    String

  @@map(name: "review")
}

model Author {
  id         String  @id @default(cuid())
  firstName  String
  lastName   String
  otherNames String?
  books      Book[]

  @@unique([firstName, otherNames, lastName], name: "fullName")
}
